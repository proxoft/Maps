@page "/StaticMap"
@using Proxoft.Extensions.Options
@using Proxoft.Maps.Core.Abstractions.StaticMaps

<h3>StaticMap</h3>

<div>
    <img src="@ImageSrc"/>
</div>

@if (!string.IsNullOrWhiteSpace(this.Error))
{
    <div>
        <span>Error: </span>
        <span>@this.Error</span>
    </div>
}


@code {
    private const string _imageSrcPrefix = "data:image/jpg;base64";

    [Inject]
    public IStaticMapService StaticMapService { get; set; } = null!;

    private string Error { get; set; } = "";
    private string ImageSrc { get; set; } = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (!firstRender)
        {
            return;
        }

        LatLng center = new() {
            Latitude = 48.159123000000000m,
            Longitude = 17.168397500000000m
        };

        Proxoft.Maps.Core.Abstractions.StaticMaps.MapOptions options = new()
        {
            Center = center,
            Zoom = ZoomLevel.Thirteen,
            Size = new SizePixel
            {
                Width = 400,
                Height = 400
            },
            Markers = new[]
            {
                new Proxoft.Maps.Core.Abstractions.StaticMaps.MarkerOptions
                {
                    LatLng = center,
                    Color = System.Drawing.Color.AntiqueWhite,
                    Label = "M"
                }
            }
        };

        var either = await this.StaticMapService.CreateImage(options);

        this.ImageSrc = either
            .Map(data => {
                this.Error = string.Empty;
                return $"data:image/png;base64, {Convert.ToBase64String(data)}";
            })
            .Reduce(error =>
            {
                this.Error = error;
                return "";
            });

        this.StateHasChanged();
    }
}
